{"version":3,"sources":["Login.js","Preferences.js","images/logo.png","Header.js","allForms.js","Form.js","Forms.js","Main.js","Score.js","Dashboard.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","className","type","onClick","console","log","changeLogInState","Preferences","Header","to","src","logo","alt","LoggedIn","allForms","name","label","cathegory","id","options","value","Form","changeScoreLocal","e","changeScore","currentTarget","htmlFor","form","map","option","onChange","Forms","Component","Main","sumAll","array","result","forEach","element","parseInt","Score","totalGeral","Geral","totalResultado","Resultado","score","Dashboard","Footer","App","newValue","v","split","vG","state","vR","setState","path","this","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f02974ae.chunk.js","sourcesContent":["//Login.js\nimport './styles/Login.css';\n\nexport default function Login(props) {\n\n    function handleSubmit() {\n        console.log(\"login\");\n        props.changeLogInState(true);\n    }\n\n    return (\n        <div className=\"login-wrapper\">\n            \n            <form>\n                <p>\n                <label>\n                    Username: \n                    <input type=\"text\" />\n                    </label>\n                </p>\n                <p>\n                <label>\n                    Password: \n                    <input type=\"password\" />\n                </label>\n                </p>\n                <div>\n                    <button type=\"button\"\n                        onClick={handleSubmit}\n                    >Log In</button>\n                </div>\n            </form>\n        </div>\n    )\n}","//Preferences.js\n\nimport './styles/Preferences.css';\n\nexport default function Preferences() {\n    return (\n        <main className=\"mainContent wrapper\">\n            <section className=\"preferences-wrapper\">\n                <h2>Preferences</h2>\n            </section>\n        </main>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo.4bcce2b1.png\";","//Header.js\nimport logo from './images/logo.png';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Header(props) {\n    \n    function handleSubmit() {\n        console.log(\"logout\");\n        props.changeLogInState(false);\n    }\n\n    return (\n        <header className=\"App-header\">\n            <nav className=\"nav wrapper\">\n                <ul>\n                    <Link to=\"/\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></Link>\n                    \n                    {props.LoggedIn\n                        && <div className=\"loggedInMenu\">\n                            <li>\n                                <Link to=\"/dashboard\">Dashboard</Link>\n                                \n                            </li>\n                            <li>\n                                <Link to=\"/preferences\">Preferences</Link>\n                                \n                        </li>\n                        <li>\n                            <button type=\"button\"\n                                onClick={handleSubmit}\n                            >Log Out</button>\n                        \n                        </li>\n                        </div>\n                    }\n                </ul>\n            </nav>\n            <h1 className=\"wrapper\">Evaluate New Technologies</h1>\n            {/* <p>User is logged in: {props.LoggedIn ? 'true' : 'false'}</p> */}\n\n        </header>\n    )\n}","//allForms.js\n\nconst allForms = [\n    {\n        name: 'Desenho de estudo',\n        label: \"desenhoDeEstudo\",\n        cathegory: 'Geral',\n        id: 0,\n        options: [{\n            name: 'Ensaio Randomizado Controlado',\n            value: '7',\n        },\n        {\n            name: 'Ensaio Não Controlado',\n            value: '6',\n            },\n            {\n                name: 'Coorte Controlada',\n                value: '5',\n            },\n            {\n                name: 'Transversal',\n                value: '4',\n            },\n            {\n                name: 'Caso - Controle',\n                value: '3',\n            },\n            {\n                name: 'Relato de Casos',\n                value: '2',\n            },\n            {\n                name: 'Publicação Opinativa / Não identificado',\n                value: '-10',\n            }\n            ]\n    },\n    {\n        name: 'Tipo de desfecho, que apresenta significância estatística, associado à intervenção / exposição',\n        cathegory: 'Resultado',\n        id: 0,\n        label: 'desfecho',\n        options: [\n            {\n                name: 'Nenhum resultado estatisticamente significante',\n                value: '-5',\n            },\n            {\n                name: 'Desfecho substituto não clínico(ex.: taxa de resposta)',\n                value: '1',\n            }, {\n                name: 'Desfecho substituto clínico (ex.: PFS)',\n                value: '2',\n            }, {\n                name: 'Desfecho duro(ex.: sobrevida global, qualidade de vida)',\n                    value: '3',\n            }, {\n                name: 'Informação ausente / Não avaliado',\n                value: '-10',\n            }]\n    },\n    {\n        name: 'Magnitude do benefício clínico associado à intervenção/ exposição',\n        label: 'beneficio',\n        cathegory: 'Resultado',\n        id: 1,\n        options: [\n            {\n                name: 'Ausente(HR > ou = 1)',\n                value: '-5',\n            }, {\n                name: 'Presente, magnitude pequena(0, 7 < HR < 1)',\n                value: '1',\n            }, {\n                name: 'Presente, magnitude moderada(0, 4 < HR < 0, 7)',\n                value: '2',\n            }, {\n                name: 'Presente, magnitude grande(HR < 0, 4)',\n                value: '3',\n            }, {\n                name: 'Informação ausente / não avaliado',\n                value: '-10',\n            }]\n    }\n\n]\n\nexport default allForms;","//Form.js\n\nconst Form = (props) => {\n\n    function changeScoreLocal(e) {\n        // console.log(e.currentTarget);\n        props.changeScore(e.currentTarget.value);\n    }\n    \n    return (\n        <form>\n            <p><label htmlFor={props.label} className=\"formLabel\">{props.cathegory} :: {props.name}</label>\n            </p>\n            {props.form.options.map((option) => {\n                return (\n                    <fragment>\n                        <input type=\"radio\"\n                            name={props.label}\n                            value={[props.cathegory,props.id,option.value]}\n                            onChange={changeScoreLocal}\n                            />\n                        <label htmlFor={option.value}>{option.name}</label><br></br>\n                    </fragment>\n                )\n            })\n            }\n        </form>\n    )\n}\n\nexport default Form;","//Form.js\nimport React, { Component } from 'react';\nimport allForms from './allForms.js';\n\nimport Form from './Form.js';\n\nclass Forms extends Component {\n    render() {\n        return (\n            <section className=\"forms wrapper\">\n                {allForms.map((form) => {\n                    return (\n                        <fragment>\n                            <Form form={form} label={form.label} cathegory={form.cathegory} id={form.id} name={form.name} changeScore={this.props.changeScore} />\n                        </fragment>\n                    )\n                })}\n            </section>\n        );\n    }\n}\n\nexport default Forms;","//Main.js\nimport Forms from './Forms.js';\n\nconst Main = (props) => {\n    return (\n        <main className=\"mainContent\">\n            <Forms changeScore={props.changeScore} />\n        </main>\n    )\n}\n\nexport default Main;","//Score.js\n\nfunction sumAll(array) {\n    let result = 0;\n    array.forEach(element => {\n        result += parseInt(element);\n    });\n    return result;\n}\n\nconst Score = (props) => {\n    let totalGeral = sumAll(props.Geral);\n    let totalResultado = sumAll(props.Resultado);\n    //PLACE TO ADD NEW DIMENSION\n\n    //PLACE TO ADD NEW DIMENSION\n    let score = totalGeral + totalResultado;\n    if (score < 0) {\n        \n    }\n    return (\n        <div className=\"score\">\n            <p className={score >= 0 ? \"goodScore\" : \"badScore\"}>SCORE: {score}</p>\n            <p>Geral: {totalGeral}</p>\n            <p>Resultado: {totalResultado}</p>\n            {/* PLACE TO ADD NEW DIMENSION: */}\n        </div>\n    )\n}\n\nexport default Score;","//Dashboard.js\n\nimport './styles/Dashboard.css';\n\nexport default function Dashboard(props) {\n    return (\n        <main className=\"mainContent wrapper\">\n            <section className=\"dashboard-wrapper\">\n                <h2>Dashboard</h2>\n            </section>\n            \n        </main>\n    );\n}","//Footer.js\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            &#169; Ana Rodrigues 2021\n        </footer>\n    )\n}\n\nexport default Footer;","import './styles/Setup.css';\nimport './styles/App.css';\nimport './styles/Header.css';\nimport './styles/Score.css';\nimport './styles/Footer.css';\nimport './styles/MediaQueries.css';\nimport './styles/Animations.css';\n\n//Authentication:\nimport Login from './Login.js';\nimport Preferences from './Preferences.js';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport React, { Component } from 'react';\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Score from './Score.js';\nimport Dashboard from './Dashboard.js';\nimport Footer from './Footer.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LoggedIn: false,\n      Geral: [0],\n      Resultado: [0],\n      //PLACE TO ADD NEW DIMENSION\n    }\n  }\n\n  changeScore = (newValue) => {\n    let v = newValue.split(\",\");\n    let type = v[0];\n    let id = parseInt(v[1]);\n    let value = parseInt(v[2]);\n\n    let vG = this.state.Geral;\n    let vR = this.state.Resultado;\n\n    switch (type) {\n      case 'Geral':\n        vG[id] = value;\n        break;\n      case 'Resultado':\n        vR[id] = value;\n        break;\n      //PLACE TO ADD NEW DIMENSION\n      default:\n        break;\n    }\n\n    this.setState({\n      Geral: vG,\n      Resultado: vR,\n      //PLACE TO ADD NEW DIMENSION\n    });\n  }\n\n  changeLogInState = (value) => {\n    this.setState({\n      LoggedIn: value,\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Header\n                LoggedIn={this.state.LoggedIn}\n                changeLogInState={this.changeLogInState}\n              />\n              <Dashboard />\n\n            </Route>\n            <Route path=\"/preferences\">\n              <Header\n                LoggedIn={this.state.LoggedIn}\n              />\n              <Preferences />\n            </Route>\n            <Route path=\"/\">\n              {this.state.LoggedIn ?\n                <fragment>\n                  <Header\n                    LoggedIn={this.state.LoggedIn}\n                    changeLogInState={this.changeLogInState}\n                  />\n                  <Score Geral={this.state.Geral}\n                    Resultado={this.state.Resultado}\n                  //PLACE TO ADD NEW DIMENSION\n                  />\n                  <Main changeScore={this.changeScore} />\n                </fragment> :\n                <fragment>\n                  <Header\n                    LoggedIn={this.state.LoggedIn}\n                    changeLogInState={this.changeLogInState}\n                  />\n                  \n                  <Login\n                    changeLogInState={this.changeLogInState}\n                  />\n                  \n                </fragment>}\n              \n\n            </Route>\n          </Switch>\n        </BrowserRouter>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}